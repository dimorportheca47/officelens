{
  "Resources": {
    "graphqlApi": {
      "Type": "AWS::AppSync::GraphQLApi",
      "Properties": {
        "AuthenticationType": "API_KEY",
        "Name": "graphqlapi"
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/graphqlApi"
      }
    },
    "MutationKey": {
      "Type": "AWS::AppSync::ApiKey",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "graphqlApi",
            "ApiId"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/MutationKey"
      }
    },
    "DeviceTable8C9DE3B7": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "PartitionKey",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "SortKey",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "PartitionKey",
            "AttributeType": "S"
          },
          {
            "AttributeName": "SortKey",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_IMAGE"
        },
        "TableName": "DeviceTable"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "BackendStack/DeviceTable/Resource"
      }
    },
    "mutationTriggerdByDDBSMutationHandlerServiceRole017732B2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/mutationTriggerdByDDBS/MutationHandler/ServiceRole/Resource"
      }
    },
    "mutationTriggerdByDDBSMutationHandlerServiceRoleDefaultPolicyD31B4DB8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DeviceTable8C9DE3B7",
                  "StreamArn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "mutationTriggerdByDDBSMutationHandlerServiceRoleDefaultPolicyD31B4DB8",
        "Roles": [
          {
            "Ref": "mutationTriggerdByDDBSMutationHandlerServiceRole017732B2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/mutationTriggerdByDDBS/MutationHandler/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "mutationTriggerdByDDBSMutationHandler1BDC0CD5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters2d8ed44776a641b453017462ae78b53910f055925d9f4b5168571f82ee11db34S3Bucket6800AD0E"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters2d8ed44776a641b453017462ae78b53910f055925d9f4b5168571f82ee11db34S3VersionKey7B586895"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters2d8ed44776a641b453017462ae78b53910f055925d9f4b5168571f82ee11db34S3VersionKey7B586895"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "mutationTriggerdByDDBSMutationHandlerServiceRole017732B2",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "ENDPOINT": {
              "Fn::GetAtt": [
                "graphqlApi",
                "GraphQLUrl"
              ]
            },
            "API_KEY": {
              "Fn::GetAtt": [
                "MutationKey",
                "ApiKey"
              ]
            }
          }
        },
        "Handler": "mutation.handler",
        "Runtime": "python3.7"
      },
      "DependsOn": [
        "mutationTriggerdByDDBSMutationHandlerServiceRoleDefaultPolicyD31B4DB8",
        "mutationTriggerdByDDBSMutationHandlerServiceRole017732B2"
      ],
      "Metadata": {
        "aws:cdk:path": "BackendStack/mutationTriggerdByDDBS/MutationHandler/Resource",
        "aws:asset:path": "asset.2d8ed44776a641b453017462ae78b53910f055925d9f4b5168571f82ee11db34",
        "aws:asset:property": "Code"
      }
    },
    "mutationTriggerdByDDBSMutationHandlerDynamoDBEventSourceBackendStackDeviceTable7248D638912348CA": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "FunctionName": {
          "Ref": "mutationTriggerdByDDBSMutationHandler1BDC0CD5"
        },
        "BatchSize": 100,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "DeviceTable8C9DE3B7",
            "StreamArn"
          ]
        },
        "StartingPosition": "LATEST"
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/mutationTriggerdByDDBS/MutationHandler/DynamoDBEventSource:BackendStackDeviceTable7248D638/Resource"
      }
    },
    "dataSourceIamRole2149C6A1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonDynamoDBFullAccess"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/dataSourceIamRole/Resource"
      }
    },
    "DDBSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "graphqlApi",
            "ApiId"
          ]
        },
        "Name": "ddbsource",
        "Type": "AMAZON_DYNAMODB",
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region"
          },
          "TableName": {
            "Ref": "DeviceTable8C9DE3B7"
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "dataSourceIamRole2149C6A1",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/DDBSource"
      }
    },
    "NONESource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "graphqlApi",
            "ApiId"
          ]
        },
        "Name": "nonesource",
        "Type": "NONE"
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/NONESource"
      }
    },
    "GraphQLSchema": {
      "Type": "AWS::AppSync::GraphQLSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "graphqlApi",
            "ApiId"
          ]
        },
        "Definition": "type DeviceTable {\n\tPartitionKey: String!\n\tSortKey: String!\n\tAlias: String\n\tSensorID: String\n\tIsConnected: Boolean\n\tIsOccupied: Boolean\n}\n\ntype DeviceTableConnection {\n\titems: [DeviceTable]\n\tnextToken: String\n}\n\ntype Mutation {\n\tMutationDeviceTable(input: UpdateDeviceTableInput!): DeviceTable\n}\n\ntype Query {\n\tqueryDeviceTable(\n\t\tPartitionKey: String!,\n\t\tfilter: TableDeviceTableFilterInput,\n\t\tlimit: Int,\n\t\tnextToken: String\n\t): DeviceTableConnection\n}\n\ntype Subscription {\n\tSubscriptionDeviceTable: DeviceTable\n\t\t@aws_subscribe(mutations: [\"MutationDeviceTable\"])\n}\n\ninput TableDeviceTableFilterInput {\n\tPartitionKey: TableStringFilterInput\n\tSortKey: TableStringFilterInput\n\tAlias: TableStringFilterInput\n\tSensorID: TableStringFilterInput\n\tIsConnected: TableBooleanFilterInput\n\tIsOccupied: TableBooleanFilterInput\n}\n\ninput TableStringFilterInput {\n\tne: String\n\teq: String\n\tle: String\n\tlt: String\n\tge: String\n\tgt: String\n\tcontains: String\n\tnotContains: String\n\tbetween: [String]\n\tbeginsWith: String\n}\n\ninput TableBooleanFilterInput {\n\tne: Boolean\n\teq: Boolean\n}\n\ninput UpdateDeviceTableInput {\n\tPartitionKey: String!\n\tSortKey: String!\n\tAlias: String\n\tSensorID: String\n\tIsConnected: Boolean\n\tIsOccupied: Boolean\n}"
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/GraphQLSchema"
      }
    },
    "queryDeviceTableResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "graphqlApi",
            "ApiId"
          ]
        },
        "FieldName": "queryDeviceTable",
        "TypeName": "Query",
        "DataSourceName": "ddbsource",
        "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"Query\",\n    \"query\" : {\n        ## Provide a query expression. **\n        \"expression\": \"PartitionKey = :PartitionKey\",\n        \"expressionValues\" : {\n            \":PartitionKey\" : $util.dynamodb.toDynamoDBJson($ctx.args.PartitionKey)\n        }\n    },\n    \"filter\": #if($context.args.filter) $util.transform.toDynamoDBFilterExpression($ctx.args.filter) #else null #end,\n    \"limit\": $util.defaultIfNull($ctx.args.limit, 100),\n    \"nextToken\": $util.toJson($util.defaultIfNullOrEmpty($ctx.args.nextToken, null)),\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      },
      "DependsOn": [
        "GraphQLSchema"
      ],
      "Metadata": {
        "aws:cdk:path": "BackendStack/queryDeviceTableResolver"
      }
    },
    "mutationDeviceTableResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "graphqlApi",
            "ApiId"
          ]
        },
        "FieldName": "MutationDeviceTable",
        "TypeName": "Mutation",
        "DataSourceName": "nonesource",
        "RequestMappingTemplate": "{\"version\": \"2017-02-28\",\"payload\": $util.toJson($ctx.args.input)}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      },
      "DependsOn": [
        "GraphQLSchema"
      ],
      "Metadata": {
        "aws:cdk:path": "BackendStack/mutationDeviceTableResolver"
      }
    },
    "streamtoDeviceTable8F974183": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "ShardCount": 1,
        "RetentionPeriodHours": 24,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis"
            }
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/streamtoDeviceTable/Resource"
      }
    },
    "putItemToDeviceTablePutItemHandlerServiceRole56C3A439": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/putItemToDeviceTable/PutItemHandler/ServiceRole/Resource"
      }
    },
    "putItemToDeviceTablePutItemHandlerServiceRoleDefaultPolicy20C57708": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "streamtoDeviceTable8F974183",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kinesis:DescribeStream",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "streamtoDeviceTable8F974183",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DeviceTable8C9DE3B7",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "putItemToDeviceTablePutItemHandlerServiceRoleDefaultPolicy20C57708",
        "Roles": [
          {
            "Ref": "putItemToDeviceTablePutItemHandlerServiceRole56C3A439"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/putItemToDeviceTable/PutItemHandler/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "putItemToDeviceTablePutItemHandlerE7576E0D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters2d8ed44776a641b453017462ae78b53910f055925d9f4b5168571f82ee11db34S3Bucket6800AD0E"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters2d8ed44776a641b453017462ae78b53910f055925d9f4b5168571f82ee11db34S3VersionKey7B586895"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters2d8ed44776a641b453017462ae78b53910f055925d9f4b5168571f82ee11db34S3VersionKey7B586895"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "putItemToDeviceTablePutItemHandlerServiceRole56C3A439",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "DeviceTable8C9DE3B7"
            },
            "PARTITION_KEY": "PartitionKey",
            "SORT_KEY": "SortKey"
          }
        },
        "Handler": "putitem.handler",
        "Runtime": "python3.7"
      },
      "DependsOn": [
        "putItemToDeviceTablePutItemHandlerServiceRoleDefaultPolicy20C57708",
        "putItemToDeviceTablePutItemHandlerServiceRole56C3A439"
      ],
      "Metadata": {
        "aws:cdk:path": "BackendStack/putItemToDeviceTable/PutItemHandler/Resource",
        "aws:asset:path": "asset.2d8ed44776a641b453017462ae78b53910f055925d9f4b5168571f82ee11db34",
        "aws:asset:property": "Code"
      }
    },
    "putItemToDeviceTablePutItemHandlerKinesisEventSourceBackendStackstreamtoDeviceTableFCADF290AB85D9E6": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "FunctionName": {
          "Ref": "putItemToDeviceTablePutItemHandlerE7576E0D"
        },
        "BatchSize": 100,
        "BisectBatchOnFunctionError": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "streamtoDeviceTable8F974183",
            "Arn"
          ]
        },
        "MaximumRetryAttempts": 2,
        "ParallelizationFactor": 1,
        "StartingPosition": "LATEST"
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/putItemToDeviceTable/PutItemHandler/KinesisEventSource:BackendStackstreamtoDeviceTableFCADF290/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/2VQXW8CIRD8Lb5zWDVNfazaj4e2qfX6B1Zuq/QOuMBicyH89wJ6pkmfZpbM7LAz42E2X/KbyT38uEo07TQIY5GHmkC0bPOl3z31ntgOnfFWINsY7ch6QWzlHFLSHaQ+ZOUWLCgktHlIskaSNDoPozmynBKaQYMyzZ6HT9h3mBWFRNaB2jfAw5PXYjRf+eMJNdVl0Rv0/SX1/2tkEhQPO3NeXXBrOimG8svCInOLCvIBjpc70szXXrRIa3DIWqnRSZd7sAgqG88sxshm87u/jWVMyW7QgockfLbQHz9eV73MtgQvWJIfgKC+lHhV1eKICsaSuhPaFLAd6Gj0dMGX/Hby7aSsrNckFfLdGX8BgPFrtLcBAAA="
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "EndPoint": {
      "Description": "REACT_APP_ENDPOINT",
      "Value": {
        "Fn::GetAtt": [
          "graphqlApi",
          "GraphQLUrl"
        ]
      }
    },
    "ApiKey": {
      "Description": "REACT_APP_API_KEY",
      "Value": {
        "Fn::GetAtt": [
          "MutationKey",
          "ApiKey"
        ]
      }
    }
  },
  "Parameters": {
    "AssetParameters2d8ed44776a641b453017462ae78b53910f055925d9f4b5168571f82ee11db34S3Bucket6800AD0E": {
      "Type": "String",
      "Description": "S3 bucket for asset \"2d8ed44776a641b453017462ae78b53910f055925d9f4b5168571f82ee11db34\""
    },
    "AssetParameters2d8ed44776a641b453017462ae78b53910f055925d9f4b5168571f82ee11db34S3VersionKey7B586895": {
      "Type": "String",
      "Description": "S3 key for asset version \"2d8ed44776a641b453017462ae78b53910f055925d9f4b5168571f82ee11db34\""
    },
    "AssetParameters2d8ed44776a641b453017462ae78b53910f055925d9f4b5168571f82ee11db34ArtifactHash6290C4BB": {
      "Type": "String",
      "Description": "Artifact hash for asset \"2d8ed44776a641b453017462ae78b53910f055925d9f4b5168571f82ee11db34\""
    }
  },
  "Conditions": {
    "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region"
            },
            "cn-north-1"
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region"
            },
            "cn-northwest-1"
          ]
        }
      ]
    },
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}